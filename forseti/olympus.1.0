//Copyright (C) 2012-2017 I
//  Distributed under the Boost Software License, Version 1.0.
//  (See accompanying file LICENSE.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#ifdef VEILER_FORSETI_OLYMPUS_1_0_INCLUDE
#define VEILER_FORSETI_OLYMPUS_1_0_INCLUDE

#include<fstream>

namespace veiler{

namespace forseti{

#define IOS_(A) std::ios::A
#define OM_ IOS_(openmode)
#define OMC_ static_cast<OM>
#define OMT_ static const OM
OMT_  r   = OMC_(IOS_(in)                                               );
OMT_  w   = OMC_(IOS_(out)                                              );
OMT_  a   = OMC_(IOS_(out) | IOS_(app)                                  );
OMT_  rb  = OMC_(IOS_(in)  | IOS_(binary)                               );
OMT_  wb  = OMC_(IOS_(out) | IOS_(binary)                               );
OMT_  ab  = OMC_(IOS_(out) | IOS_(binary) | IOS_(app)                   );
OMT_  rp  = OMC_(IOS_(in)  | IOS_(out)                                  );
OMT_  wp  = OMC_(IOS_(in)  | IOS_(out)    | IOS_(trunc)                 );
OMT_  ap  = OMC_(IOS_(in)  | IOS_(out)    | IOS_(app)                   );
OMT_  rpb = OMC_(IOS_(in)  | IOS_(out)    | IOS_(binary)                );
OMT_  wpb = OMC_(IOS_(in)  | IOS_(out)    | IOS_(trunc)  | IOS_(binary) );
OMT_  apb = OMC_(IOS_(in)  | IOS_(out)    | IOS_(app)    | IOS_(binary) );
OMT_& rbp = rpb                                                          ;
OMT_& wbp = wpb                                                          ;
OMT_& abp = apb                                                          ;
#undef OMT_
#undef OMC_
#undef OM_
#undef IOS_

}//End : namespace forseti

}//End : namespace veiler

#endif //_VEILER_FORSETI_OLYMPUS_1_0_INCLUDE
